name: Unit
description: 'Runs unit tests across different operating systems'

on:
  workflow_call:
    inputs:
      os:
        description: 'Operating system to run tests on'
        type: string
        required: true
      build_id:
        description: 'Build ID from the build job'
        type: string
        required: false
      artifact_size:
        description: 'Size of the build artifact in bytes'
        type: string
        required: false
      cache_key:
        description: 'Cache key to use for downloading artifacts'
        type: string
        required: false

env:
  TURBO_TELEMETRY_DISABLED: 1

jobs:
  unit:
    name: Unit Tests
    runs-on: ${{ inputs.os }}
    steps:
      # Install Linux dependencies if on Linux
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo tee -a /etc/apt/sources.list > /dev/null <<EOT
          deb http://archive.ubuntu.com/ubuntu jammy main universe
          EOT
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libglib2.0-dev \
            libsoup-2.4-1 \
            libjavascriptcoregtk-4.1-dev

      # Standard checkout
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up Node.js and PNPM
      - name: 🛠️ Setup Development Environment
        uses: ./.github/workflows/actions/setup-workspace
        with:
          node-version: '20'

      # Download the pre-built packages from the build job
      - name: 📦 Download Build Artifacts
        uses: ./.github/workflows/actions/download-archive
        with:
          name: zubridge
          path: zubridge-build
          filename: artifact.zip
          cache_key_prefix: zubridge-build
          exact_cache_key: ${{ inputs.cache_key }}

      # Display build information if available
      - name: 📊 Show Build Information
        if: inputs.build_id != '' && inputs.artifact_size != ''
        shell: bash
        run: |
          echo "::notice::Build artifact: ID=${{ inputs.build_id }}, Size=${{ inputs.artifact_size }} bytes"

      # Run unit tests
      - name: 🧪 Execute Unit Tests
        run: pnpm run test:unit
        shell: bash

      # Debug on failure
      - name: 🐛 Debug on Failure
        uses: stateful/vscode-server-action@v1.1.0
        if: failure()
        with:
          timeout: '180000'
