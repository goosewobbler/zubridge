name: Release Orchestration

# This is a reusable workflow that handles both regular releases and pre-releases
# It is called by both release.yml and pre-release.yml workflows

on:
  workflow_call:
    inputs:
      branch:
        description: 'Branch type to release from (feature, main - will be automatically resolved)'
        required: true
        type: string
      release_version:
        description: 'Release type (patch, minor, major, prepatch, preminor, premajor, prerelease)'
        required: true
        type: string
      dry_run:
        description: 'Do not touch or write anything. Show the commands.'
        required: true
        default: false
        type: boolean
      packages:
        description: 'Package directory name(s) to release (electron, tauri, etc)'
        required: false
        type: string
        default: 'all'
    secrets:
      GITHUB_BOT_TOKEN:
        description: 'GitHub token for authentication'
        required: true
      NPM_TOKEN:
        description: 'NPM token for publishing packages'
        required: true
      DEPLOY_KEY:
        description: 'SSH deploy key for pushing to the repository'
        required: true
      CRATES_IO_TOKEN:
        description: 'Crates.io token for publishing Rust packages'
        required: true
      TURBO_TOKEN:
        description: 'Vercel token for Turborepo remote caching'
        required: true
      TURBO_TEAM:
        description: 'Vercel team/scope slug for Turborepo remote caching'
        required: true
      TURBO_API:
        description: 'Vercel API endpoint for Turborepo remote caching'
        required: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_BOT_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  TURBO_TELEMETRY_DISABLED: 1
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_API: ${{ secrets.TURBO_API }}

jobs:
  # Verify this is the official repository
  verify_repository:
    runs-on: ubuntu-latest
    steps:
      - name: Verify Official Repository
        if: ${{ github.repository != 'goosewobbler/zubridge' }}
        run: |
          echo "::error::This workflow can only be run in the official repository (goosewobbler/zubridge)"
          exit 1

  # Calculate branch names and validate parameters
  calculate_branches:
    needs: [verify_repository]
    uses: ./.github/workflows/_release-calculate.reusable.yml
    with:
      branch: ${{ inputs.branch }}
      release_version: ${{ inputs.release_version }}
      packages: ${{ inputs.packages }}

  # Prepare the release (version bump, changelog, etc.)
  prepare:
    needs: ['calculate_branches']
    uses: ./.github/workflows/_release-prepare.reusable.yml
    with:
      target_branch: ${{ needs.calculate_branches.outputs.target_branch }}
      next_version_branch: ${{ needs.calculate_branches.outputs.next_version_branch }}
      release_version: ${{ inputs.release_version }}
      packages: ${{ inputs.packages }}
      dry_run: ${{ inputs.dry_run }}
      branch_type: ${{ inputs.branch }}
      calculated_version: ${{ needs.calculate_branches.outputs.calculated_version }}
    secrets:
      GITHUB_BOT_TOKEN: ${{ secrets.GITHUB_BOT_TOKEN }}
      DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}

  # Publish the release (tag, npm publish, GitHub release)
  publish_release:
    needs: ['calculate_branches', 'prepare']
    uses: ./.github/workflows/_release-publish.reusable.yml
    with:
      target_branch: ${{ needs.calculate_branches.outputs.target_branch }}
      release_version: ${{ inputs.release_version }}
      packages: ${{ inputs.packages }}
      dry_run: ${{ inputs.dry_run }}
      branch_type: ${{ inputs.branch }}
    secrets:
      GITHUB_BOT_TOKEN: ${{ secrets.GITHUB_BOT_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

  # Post-release tasks
  post_release:
    needs: ['calculate_branches', 'prepare', 'publish_release']
    if: ${{ always() && (needs.publish_release.result == 'success' || needs.publish_release.result == 'skipped') }}
    uses: ./.github/workflows/_release-post.reusable.yml
    with:
      target_branch: ${{ needs.calculate_branches.outputs.target_branch }}
      next_version_branch: ${{ needs.calculate_branches.outputs.next_version_branch }}
      release_version: ${{ inputs.release_version }}
      packages: ${{ inputs.packages }}
      release_tag: ${{ needs.publish_release.outputs.release_tag }}
      dry_run: ${{ inputs.dry_run }}
      branch_type: ${{ inputs.branch }}
    secrets:
      GITHUB_BOT_TOKEN: ${{ secrets.GITHUB_BOT_TOKEN }}
      DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
