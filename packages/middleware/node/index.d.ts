/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface PerformanceConfig {
  enabled?: boolean
  detail?: string
  includeInLogs?: boolean
  recordTimings?: boolean
  verboseOutput?: boolean
}
export interface TelemetryConfig {
  enabled?: boolean
  websocketPort?: number
  consoleOutput?: boolean
  logLimit?: number
  measurePerformance?: boolean
  recordStateSize?: boolean
  recordStateDelta?: boolean
  prettyPrint?: boolean
  verbose?: boolean
  performance?: PerformanceConfig
}
export interface ZubridgeMiddlewareConfig {
  telemetry?: TelemetryConfig
}
export interface Action {
  type: string
  payload?: string
  id?: string
  sourceWindowId?: number
}
export declare function initZubridgeMiddleware(config?: ZubridgeMiddlewareConfig | undefined | null): ZubridgeMiddleware
/** Wrapper for Rust ZubridgeMiddleware to expose to JS */
export declare class ZubridgeMiddleware {
  processAction(action: Action): Promise<void>
  getState(): Promise<string>
  setState(stateJson: string): Promise<void>
  trackActionDispatch(action: Action): Promise<void>
  trackActionReceived(action: Action): Promise<void>
  trackStateUpdate(action: Action, stateJson: string): Promise<void>
  trackActionAcknowledged(actionId: string): Promise<void>
}
